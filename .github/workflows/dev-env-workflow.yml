name: Developer Environment Workflow

on:
  pull_request:
    branches:
      - main 
    paths:
      - TailwindTraders.Website/Deploy/IaC/**
  workflow_dispatch:

env:

  # The name of the resource group to be created.
  DEV_RG_NAME: "RG-Dev-TailwindTraders"

  # The location to store the meta data for the deployment.
  DEV_LOCATION: "westeurope"

  # The name of the WebApp
  DEV_WEBAPP_NAME: "DEV-TailwindTraders-ADO40"

  # Declaring the version of .NET to be used
  DOTNET_VERSION: 5.x

  # Declaring the version of Node to be used
  NODE_VERSION: 10.x

jobs:
  buildImage:
    name: build provider image
    runs-on: ubuntu-latest
    steps:

    # checkout branch
    - name: checkout main branch
      uses: actions/checkout@v2

    # # setup .NET and Node
    # - name: Setup .NET Core
    #   uses: actions/setup-dotnet@v1
    #   with:
    #     dotnet-version: ${{ env.DOTNET_VERSION }}
   
    # - name: Setup Node
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: ${{ env.NODE_VERSION }}

    # log into Azure
    - name: "Login via Azure CLI"
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # # Deploy Bicep File
    # - name: Deploy WebApp
    #   uses: azure/arm-deploy@v1
    #   with: 
    #     subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
       
    #     template: ./azuredeploy.bicep
    #     parameters: storagePrefix=mystore
    #     failOnStdErr: false

    # Deploy Bicep


## Test command

      # az deployment sub create \
      #   --name rg-russ-test3 \
      #   --location uksouth \
      #    --template-file main.bicep \
      #   --parameters location=uksouth \
      #   --parameters rgName=rg-russ-test3 \
      #   --parameters webAppName=russtestweb3 \
      #   --parameters dockerRegistryHost=ttacrbyskvloe5jfqa.azurecr.io \
      #   --parameters dockerRegistryServerUsername=ttacrbyskvloe5jfqa \
      #   --parameters dockerRegistryServerPassword=g9oLm6pTAwFWU9icwAg8L9 \
      #   --parameters dockerImage=tailwindtraders-ado40:latest \
      #   --output json

    # - name: Install dependencies in app
    #   run: dotnet restore ./TailwindTraders.Website/Source/*.sln
   
    # - name: Build, test and publish with dotnet
    #   working-directory: ./TailwindTraders.Website/Source/*.sln
    #   run: |
    #     dotnet build --configuration Release
    #     dotnet test --no-restore --verbosity normal
    #     dotnet publish -c Release -o publish

    - name: "docker login"
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.DOCKER_LOGIN_SERVER }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
 


    # - name: Upload Artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: drop
    #     path: "./dev"

  # # Dev Deployment tasks
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: buildImage
  #   environment: Dev

  #   steps:

  #   - name: Download Artifact
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: drop
  #       path: "./dev"


    
    
  # Build Docker Image and push to Azure Container Registry
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.DOCKER_LOGIN_SERVER }}/tailwindtraders-ado40:latest
        context: ./TailwindTraders.Website/Source/Tailwind.Traders.Web/

    - name: Deploy infrastructure
      id: azure-deployment
      shell: pwsh
      run: |
        $deployment = $(az deployment sub create --name ${{ env.DEV_RG_NAME }} `
          --location ${{ env.DEV_LOCATION }} `
          --template-file ./main.bicep `
          --parameters location=${{ env.DEV_LOCATION }} `
          --parameters rgName=${{ env.DEV_RG_NAME }} `
          --parameters webAppName=${{ env.DEV_WEBAPP_NAME}} `
          --parameters dockerRegistryHost=${{ secrets.DOCKER_LOGIN_SERVER }} `
          --parameters dockerRegistryServerUsername=${{ secrets.DOCKER_USERNAME }} `
          --parameters dockerRegistryServerPassword=${{ steps.DOCKER_PASSWORD }} `
          --parameters dockerImage=tailwindtraders-ado40:latest `
          --output json) | ConvertFrom-Json
      working-directory: ./TailwindTraders.Website/Deploy/IaC
    
 


    # - name: Add a dash of confidence
    #   uses: microsoft/mindaro/actions/add-review-url@Releases/v1              
    #   with:
    #       repo-token: ${{ secrets.GITHUB_TOKEN }}  
    #       branch-name: ${{steps.generate-valid-namespace-name.outputs.result}}
    #       host: "viewer.${{ secrets.HOST }}" ## TODO see if we can not hard code ingress.hosts
    #       protocol: "http"

