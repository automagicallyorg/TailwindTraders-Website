name: Developer Environment Workflow

on:
  pull_request:
    branches:
      - dev
    paths:
      - twitter-sentiment-processor/demos/demo2/**
  workflow_dispatch:

env:

  # The name of the resource group to be created.
  RG_NAME: "RG-Dev-WebApp"

  # The location to store the meta data for the deployment.
  LOCATION: "centralus"

  # Declaring the version of .NET to be used
  DOTNET_VERSION: 5.x

  # Declaring the version of Node to be used
  NODE_VERSION: 10.x

jobs:
  buildImage:
    name: build provider image
    runs-on: ubuntu-latest
    steps:

    # checkout branch
    - name: checkout main branch
      uses: actions/checkout@v2

    # setup .NET and Node
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
   
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    # log into Azure
    - name: "Login via Azure CLI"
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Deploy Bicep File
    - name: Deploy WebApp
      uses: azure/arm-deploy@v1
      with: 
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.DEV_RG_AZURE }}
        template: ./azuredeploy.bicep
        parameters: storagePrefix=mystore
        failOnStdErr: false



    

    steps:

      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
   
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
   
    - name: Install dependencies in app
      run: dotnet restore ./TailwindTraders.Website/Source/*.sln
   
    - name: Build dotnet
      run: dotnet build ./TailwindTraders.Website/Source/*.sln --configuration Release --no-restore
   
    - name: Test dotnet
      run: dotnet test ./TailwindTraders.Website/Source/*.sln --no-restore --verbosity normal
    
    - name: Publish with dotnet
      run: dotnet publish ./TailwindTraders.Website/Source/Tailwind.Traders.Web/Tailwind.Traders.Web.csproj -c Release -o './production'

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: drop
        path: "./production"

  # Deployment tasks
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: Production

    steps:

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: drop
        path: "./production"

    - name: Deploy to Website
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.WEBAPP_NAME}}
        publish-profile: ${{ secrets.PUBLISH_PROFILE_PROD }}
        package: "./production"




 


    # Setup Dapr
    - name: Install Dapr
      uses: dapr/setup-dapr@v1

    # dapr init
    - name: Initialize Dapr
      shell: pwsh
      run: |
        Write-Host "${{ steps.azure-deployment.outputs.aksName }}"
        # Get the credentials to use with dapr init and helm install
        az aks get-credentials --resource-group ${{ env.RG_NAME }} --name "${{ steps.azure-deployment.outputs.aksName }}"
        # Initialize Dapr
        # Dapr init is very noisy in the logs so group these lines so
        # it can be collapsed.
        Write-Output "::group::Initialize Dapr"
        dapr init --kubernetes --wait --runtime-version ${{ env.DAPR_VERSION }}
        Write-Output "::endgroup::"
        dapr status --kubernetes
      working-directory: ./twitter-sentiment-processor/demos/demo3
    
    - name: "docker login"
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.CONTAINER_REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.CONTAINER_REGISTRY }}/provider:${{ github.run_number }}
        context: ./twitter-sentiment-processor/demos/demo2/provider/
    
    - name: Get Dev K8s Context
      uses: azure/aks-set-context@v1
      with:
        creds: "${{ secrets.AZURE_CREDENTIALS }}"
        cluster-name: ${{ steps.azure-deployment.outputs.aksName }}
        resource-group: ${{ env.RG_NAME }}
    
    - name: Create valid namespace name
      id: generate-valid-namespace-name
      run: |
        namespaceName=${GITHUB_HEAD_REF::63}        
        namespaceName=$(echo ${namespaceName//[!0-9a-zA-Z]/-} | tr '[:upper:]' '[:lower:]' | sed -e 's/^-/z/' -e 's/-$/z/')
        echo ::set-output name=result::$namespaceName
    
    - name: Setup Helm
      uses: azure/setup-helm@v1
      with:
        version: '3.6.3'
      id: install

    - name: Helm Install PR
      run: |
        CHARTDIR="./charts/"
        echo "---"
        echo "Chart directory: $CHARTDIR"
        
        helm dependency update "$CHARTDIR"
        helm upgrade \
          --install twitter-kubecon "$CHARTDIR" \
          --namespace twitter-kubecon --create-namespace \
          --set provider.image=${{ secrets.CONTAINER_REGISTRY }}/provider:${{ github.run_number }} \
          --set viewer.image=${{ secrets.CONTAINER_REGISTRY }}/viewer:1.0.0 \
          --set viewer.ingress.hosts={twitter-kubecon.viewer.40.88.250.252.nip.io} \
          --set zipkin.ingress.hosts={twitter-kubecon.zipkin.40.88.250.252.nip.io} \
          --set processor.cognitiveService.token=${{ steps.azure-deployment.outputs.cognitiveServiceKey }} \
          --set components.twitter.consumerKey=${{ secrets.TWITTER_CONSUMERKEY }} \
          --set components.twitter.consumerSecret=${{ secrets.TWITTER_CONSUMERSECRET }} \
          --set components.twitter.accessToken=${{ secrets.TWITTER_ACCESSTOKEN }} \
          --set components.twitter.accessSecret=${{ secrets.TWITTER_ACCESSSECRET }} \
          --set components.serviceBus.connectionString="${{ steps.azure-deployment.outputs.serviceBusEndpoint }}" \
          --set components.tableStorage.key="${{ steps.azure-deployment.outputs.storageAccountKey }}" \
          --set components.tableStorage.name="${{ steps.azure-deployment.outputs.storageAccountName }}" \
          --set components.tracing.zipkin.endpointAddress="http://zipkin.twitter-kubecon.svc.cluster.local:9411/api/v2/spans" \
          --set processor.cognitiveService.endpoint="${{ steps.azure-deployment.outputs.cognitiveServiceEndpoint }}" \
          --set fullnameOverride=provider-pr
      working-directory: ./twitter-sentiment-processor/demos/demo3

    - name: Add a dash of confidence
      uses: microsoft/mindaro/actions/add-review-url@Releases/v1              
      with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}  
          branch-name: ${{steps.generate-valid-namespace-name.outputs.result}}
          host: "viewer.${{ secrets.HOST }}" ## TODO see if we can not hard code ingress.hosts
          protocol: "http"
Â© 2021 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
