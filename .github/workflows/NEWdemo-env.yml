name: WebApp Workflow

on:
  push:
    branches: [ main ]

env:
  # Declaring the version of .NET to be used
  DOTNET_VERSION: 5.x

  # Declaring the version of Node to be used
  NODE_VERSION: 10.x

jobs:
  build:
    name: build 
    runs-on: ubuntu-latest
    env:
      CI: ""

    steps:

    - name: Checkout main branch
      uses: actions/checkout@v2
   
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
   
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
   
    - name: Install dependencies in app
      run: dotnet restore ./TailwindTraders.Website/Source/*.sln
   
    - name: Build dotnet
      run: dotnet build ./TailwindTraders.Website/Source/*.sln --configuration Release --no-restore
   
    - name: Test dotnet
      run: dotnet test ./TailwindTraders.Website/Source/*.sln --no-restore --verbosity normal
    
    - name: Publish with dotnet
      run: dotnet publish ./TailwindTraders.Website/Source/Tailwind.Traders.Web/Tailwind.Traders.Web.csproj -c Release -o './production'

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: drop
        path: "./production"

  # Deployment tasks
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: Production

    steps:

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: drop
        path: "./production"

    - name: Deploy to Website
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.WEBAPP_NAME}}
        publish-profile: ${{ secrets.PUBLISH_PROFILE_PROD }}
        package: "./production"




name: WebApp Workflow

on:
  push:
    branches: [ main ]

env:

  # The name of the resource group to be created.
  RG_NAME: "RG_TailwindTraders_FE"

  # The location to store the meta data for the deployment.
  LOCATION: "westeurope"

  # The name of the WebApp
  WEBAPP_NAME: "TailwindTraders-Production"

  # Declaring the version of .NET to be used
  DOTNET_VERSION: 5.x

  # Declaring the version of Node to be used
  NODE_VERSION: 10.x

jobs:
  buildTest:
    name: Build and Test Code
    runs-on: ubuntu-latest
    steps:

    # Checkout code
    - name: checkout branch
      uses: actions/checkout@v2

    # Setup .NET Core and Node
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies in app
      run: dotnet restore ./TailwindTraders.Website/Source/*.sln

    # Build and Test of .NET code
    - name: Build dotnet
      run: dotnet build ./TailwindTraders.Website/Source/*.sln --configuration Release --no-restore

    - name: Test dotnet
      run: dotnet test ./TailwindTraders.Website/Source/*.sln --no-restore --verbosity normal

    - name: Publish with dotnet
      run: dotnet publish ./TailwindTraders.Website/Source/Tailwind.Traders.Web/Tailwind.Traders.Web.csproj -c Release -o './production'

  buildImage:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: buildTest

    steps:

    # Checkout branch
    - name: checkout branch
      uses: actions/checkout@v2

    # Login to Azure
    - name: "Login via Azure CLI"
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Login to Azure Container Registry
    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        login-server: ${{ secrets.DOCKER_LOGIN_SERVER }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }} 

    # Build Docker image and push to Azure Container Registry
    - run: |
        cd TailwindTraders.Website/Source/Tailwind.Traders.Web
        docker build -t ${{ secrets.DOCKER_LOGIN_SERVER }}/tailwindtraders-ado40:${{ github.sha }} -t ${{ secrets.DOCKER_LOGIN_SERVER }}/tailwindtraders-ado40:latest .
        docker push ${{ secrets.DOCKER_LOGIN_SERVER }}/tailwindtraders-ado40:latest
        docker push ${{ secrets.DOCKER_LOGIN_SERVER }}/tailwindtraders-ado40:${{ github.sha }}
        cd ..
    
